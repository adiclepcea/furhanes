<?xml version="1.0" encoding="UTF-8"?>

<beans	
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns="http://www.springframework.org/schema/beans"
				xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				xmlns:p="http://www.springframework.org/schema/p"
				xmlns:mvc="http://www.springframework.org/schema/mvc"
				xmlns:context="http://www.springframework.org/schema/context"
				xsi:schemaLocation="
								http://www.springframework.org/schema/beans
								http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
								http://www.springframework.org/schema/mvc
								http://www.springframework.org/schema/mvc/spring-mvc.xsd
								http://www.springframework.org/schema/context
								http://www.springframework.org/schema/context/spring-context.xsd
								http://www.springframework.org/schema/security
								http://www.springframework.org/schema/security/spring-security-4.2.xsd">
						
			
	<context:component-scan base-package="org.clepcea.controllers"/>
	<context:component-scan base-package="org.clepcea.services"/>
	<mvc:annotation-driven/>
	<mvc:resources mapping="/resources/**" location="/resources/"/>
	<mvc:resources mapping="/*.html" location="/"/>
	
	
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean> 
	<bean id="springSecurityFilterChain" class="org.springframework.web.filter.DelegatingFilterProxy"/>
	<!-- <bean id="supplierService" class="org.clepcea.services.SupplierServiceImpl"/> -->
	
<!--<security:authentication-manager>
 <security:authentication-provider user-service-ref="jdbcUserService">
 </security:authentication-provider>
</security:authentication-manager> 
<bean id="jdbcUserService" class="org.clepcea.authentication.FurhanesAuthenticationProvider">
    	<property name="dataSource" ref="dataSource"/>
    	<property name="enableGroups" value="true"/>
    	<property name="enableAuthorities" value="false"/>
    	<property name="groupAuthoritiesByUsernameQuery">
    		<value>
				SELECT r.ID, r.NAME, rights.NAME
				FROM ROLES r 
				inner join USERS2ROLES u2r on u2r.ROLES_ID=r.ID
				inner join ROLES2RIGHTS r2r on r2r.ROLES_ID=r.ID 
				inner join RIGHTS rights on rights.ID=r2r.RIGHTS_ID
				inner join users u on u.ID=u2r.USERS_ID
				where u.USERNAME=?    			
    		</value>
    	</property>
    </bean>
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    	<property name="driverClassName" value="${db.driver}"/>
    	<property name="url" value="${db.url}"/>
    	<property name="username" value="${db.username}"/>
    	<property name="password" value="${db.password}"/>
    </bean>


 <security:authentication-manager> <security:authentication-provider> 
 	<security:user-service> 
 		<security:user name="user" password="user@123" authorities="ROLE_ADMIN" /> 
 	</security:user-service>   
  </security:authentication-provider> 
 </security:authentication-manager>
-->
								
</beans>